#all commands start with 'git'
init --bare	[intialize a bare repo, used as remote]
--version
staus -s	[-s stand for short]

clone https://GitHubUsername:GithubPassword@github.com/o-sapov/data_science_course-mlgraz.git [clone a remote private repo]



diff filename
	--staged [changes made but not yet commited]
q 	[quit git diff]
commit 	-m "message in presence tense"
				-am "message"	[stage and commit in one step]
	-v [opens in the editor with additional info about the commit]	
	-a [commit all changes]
	--amend [change the previous commit]

revert [ID of the commit]
config 		[check configuration for a particular parameter]
	-l 	[list all configuration parameters]
	--local core.editor vim	[choose between --local or --global parameters]
ssh-keygen -t rsa -C "le.chat454@gmail.com" [generates an ssh key]
next step: copy the key from where it is stored and paste it to github
commandName --help


https://help.github.com/en/articles/configuring-a-remote-for-a-fork



cat filenName.extension [read a file from the GitBash]  OR
type .\.gitconfig [read a file from the cmd]

branch 			[check on which branch I'm working on]		
		-a			[show available branches on remote]
		branchName	[create a new branch]		
		-d brunchName 	[delete the branch]
		-m newName			[rename, if you are on the branch you want to rename]
push remoteName --delete branchName	[delete a remote branch]		
		
checkout
	-b <branchName>	[create a new branch and switch to it]
	branchName 	[switch to another branch]
	master -- fileName	[will overwrite with the version of the last commit]
	-- .		[load all files from the repo, overwrites modified files]
	-- fileName	[load particular file]
merge <braunchName>	[do it from the branch you want to merge IN]
									 	--no-ff 	[no fast forward, useful for push from branch. Various commits are merged into one]
remote
	-v show		[show remote repositories]
	add origin	[set up origin for the first time]
	set-url origin https://...	[CHANGE the remote]

reset --soft HEAD~{number of commits}	[squashes the commits ~ merges them into ome]



tag "tagValue"
	-a [annotated] -m "message"
show "tagValue"

GItBash [same commands as Linux]
NAVIGATE FILE SYSTEM
ll
cd /l/Programmieren/cmd
ls [content of the folder]
pwd [full path of the current folder]


CREATE/DELETE
mkdir folderName
touch "fileName"	[creates a file not a git command]
mv fileName folderName/   [move file to a folder]
mv folder/file . [move file from subdirectory to the current folder '.']
cp fileName copiedFileName
	-r "folder/path/to/copy"	"folder/destination/path"
rm fileName
	-r folderPath/


VI
Command MODE
vi newFileName [create new file]
i [switch to INSERT mode from COMMAND mode]
x 	[del character]
dd 	[del line]
:w write file
:q quite VI
:wq write file and quite






CONTENT
cat test.txt [see the content]

help help commandName


ARCHIVE
_______
cd /d D:\projects\git-tutorial-brad
cd /d D:\projects\MCC
git config --local user.name "m-344"
git config --local user.email "le.chat454@gmail.com"
_______

VIM INSERT MODE
ESC [switch to COMMAND mode from INSERT mode]

add 
	* [stage all files] 
	. [stage the current file]
	-A [all changes, adds also new files]

reset	<filePath>	[unstage]

TERMINAL


NOTES:
attlssian bitbucket remote rpository services





